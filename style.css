/* style.css */

/* Basic Reset and Setup */
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 20px;
    background-color: #f4f4f4;
}

/* 1. Main Container for Row Layout */
.container {
    display: flex;       /* Enables Flexbox for side-by-side layout */
    flex-wrap: wrap;     /* Allows elements to wrap/stack on small screens */
    gap: 20px;           /* Space between the form and the output div */
    max-width: 1000px;   /* Limits the overall width */
    margin: 0 auto;      /* Centers the container on the page */
}

/* 2. Form and Output Div Styling for Equal Width */
form, div:not(.container) {
    /* flex: grow shrink basis */
    flex: 1 1 48%;       /* Makes both elements grow equally and occupy ~50% each */
    min-width: 300px;    /* Prevents them from getting too narrow before stacking */
    
    background: #fff;
    padding: 30px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

/* Form Elements Layout */
form {
    display: flex;
    flex-direction: column; 
    gap: 15px; 
}

/* Label and Input Styling */
label {
    display: flex;
    flex-direction: column;
    font-weight: bold;
    color: #333;
}

input[type="text"],
input[type="password"],
input[type="email"],
input[type="date"],
select {
    width: 100%;
    padding: 10px;
    margin-top: 5px; 
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box; /* Ensures padding doesn't increase total width */
    font-size: 1em;
}

select {
    height: 40px; 
}

/* Submit Button Styling */
input[type="submit"] {
    background-color: #5cb85c;
    color: white;
    padding: 12px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1.1em;
    margin-top: 10px;
}

input[type="submit"]:hover {
    background-color: #4cae4c;
}

/* Display Data Styling (The H1 tags inside the output div) */
#head-data, #pass-data, #pass-email, #pass-date, #pass-city {
    font-size: 1.2em;
    color: #555;
    margin: 10px 0;
}

/* Media Query: Stack items vertically on smaller screens (less than 768px wide) */
@media (max-width: 768px) {
    .container {
        flex-direction: column; /* Overrides row to stack them vertically */
        gap: 10px;
        padding: 0 10px; /* Add some side padding for smaller screens */
    }
    
    /* When stacked, they should take up full width */
    form, div:not(.container) {
        flex-basis: 100%; 
        min-width: auto;
    }
}
